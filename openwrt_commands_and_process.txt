ubuntu login
username: sandeepraj
password: '


https://bitbucket.org/dashboard/overview
username:betanapallisandeepraj


192.168.1.1
username: root
password: (nothing)

10.223.234.116
--------------------------------------------------------------
Files of interest for channel configuration/setup/new model:

./build_dir/target-mips_24kc_musl/linux-ar71xx_generic/backports-4.19.161-1/drivers/net/wireless/ath/ath9k/common-init.c
./build_dir/target-mips_24kc_musl/wireless-regdb-2020.11.20/db.txt
package/network/utils/iw/patches/9500-iw-fes-apply-ath9k-fes_freq_-shift-bw_step.patch
----------------------------------------------------------------------------------------------------
#define sandeep_DEBUG0
#define sandeep_DEBUG1

#ifdef sandeep_DEBUG0
	printk("sandeep_DEBUG0:%d:%s\n",__LINE__,__func__);
#endif
dump_stack();
printk("sandeep_DEBUG0:%d:%s:%s\n",__LINE__,__func__,__FILE__);
--------------------------------------------------------
$wifi status
$wifi config mesh
----------------------------------
https://192.168.1.1/
Network Configuration -> Firewall -> Traffic Rules
Enable 'Allow-iperf3' -> Save & Apply
$iw wlan0 info
$iperf3 -s
$iperf3 -s -D 					--> (not blocks the console, run as a deamon process in background)
$iperf3 -s -f K					--> (-f : format to report: adaptive, bits, Bytes, Kbits, Mbits, Gbits, KBytes, MBytes, GBytes)
$iperf3 -s 

$ssh 10.223.216.116
$iperf3 -c 10.223.255.55		--> (10.223.255.55 is iperf server ip)
$iperf3 -c 10.223.255.55 -t 20 	--> (t is time in seconds)
$iperf3 -c 10.223.255.55 -t 20 -f M
$iperf3 -c 10.223.255.55 -t 20 -f M -u		--> (server will link with udp port, by default it link with tcp)
$iperf3 -c 10.223.255.55 -t 20 -f M -u -b 200M --> (200M is 200 Mbits/sec,-b is for bit rate, 0 for unlimited, default is 1 Mbit/sec for UDP, unlimited for TCP)
$iperf3 -c 10.223.255.55 -t 20 -f M -u -b 0	--> (-b is bitrate, 0 is unlimited)
$iperf3 -c 10.223.255.55 -t 20 -f M -u -b 0	-R -->(-R is Reverse test mode – Server sends, client receives)
$iperf3 -c 10.223.255.55 -t 20 -f M -u -b 0	-R -d -->(-d is for debug log)
$iperf3 -c 10.223.255.55 -t 20 -f M -u -b 0	-R -w 320K --> (-u is for udp, -w is for TCP window size, this sets the socket buffer, 
															above 320K test is failing in targets)
$iperf3 -c 10.223.255.55 -t 20 -f M -b 0 -R -w 320K 	--> (-w is for TCP window size, this sets the socket buffer, 
															above 320K test is failing in targets)

$iperf3 -c 10.223.255.55 -t 20 -f M -b 0 -R -w 320K -P 4 --> (-p is for parallel connections, The number of simultaneous connections to make to the server. Default is 1.)
$iperf3 -c 10.223.255.55 -t 20 -f M -b 0 -R -w 320K -P 8
$iperf3 -c 10.223.255.55 -t 20 -f M -b 0 -w 320K -P 4
$iperf3 -c 10.223.255.55 -t 20 -f M -b 0 -R -w 320K -M 9216 --> (above 9216 test is failing to start, -M is for set the TCP maximum segment size (MSS). 
																	The MSS is usually the MTU - 40 bytes for the TCP/IP header. 
																	For ethernet, the MSS is 1460 bytes (1500 byte MTU).)

$batctl if
$iw list
$iw dev wlan0 scan
$iw dev wlan0 set channel 9 ?
$iw dev wlan0 set channel 9 5MHz


$fes_model.sh get 
$fes_model.sh get parent
$fes_model.sh set RM-915-2H-XS
$fes_model.sh set MB-0001-2L-X
$sr_personality --helix
$sr_personality -w
$uci show wireless
$iw wlan0 info
$uci set wireless.radio0.channel=13
$uci set wireless.radio0.chanbw='5'
$uci commit wireless
$wifi
$uci commit
$uci show wireless
$iw wlan0 info
$wifi --> (it will reset the wifi interface wlan0)
$iw wlan0 info
$uci show wireless
$fes_model.sh get
$ls /usr/share/.sandeeplabs/fes
$ls /etc/banner

$iw phy <phyname> set channel <channel> [HT20|HT40+|HT40-]
$iw dev <devname> set channel <channel> [HT20|HT40+|HT40-]
$iw dev wlan0 set channel 1 [HT20|HT40+|HT40-]
$iw dev wlan0 set freq 2412 [HT20|HT40+|HT40-]
$ip link set wlan0 down
$ip link set wlan0 up

$iwconfig wlan0
$iwconfig wlan0 freq 2.484G

$iw reg get
$iw reg set US

$wifi status

To change mode to mesh using CLI, the command is as below:
$/usr/share/simpleconfig/setup.sh mesh 
$/usr/sbin/fes_apply_defaults.sh
$/etc/init.d/network restart
$/etc/init.d/wearable-ctrld restart
Other mode can be: 
meshmerize | mesh_and_ap | mesh_gw | mesh_multi | wds_ap | wds_ap_gw | wds_client
You can refer to GUI simple config menu to know more about these options. 


$iw wlan0 station dump
$iw wlan0 station dump | grep Station

debug filesystem to change the registers of a driver,
$cat /sys/kernel/debug/ieee80211/phy0/ath9k/regidx 
$cat /sys/kernel/debug/ieee80211/phy0/ath9k/regval 
$cat /sys/kernel/debug/ieee80211/phy0/ath9k/regdump
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
To setup dynamic meshmode or any mode,
or if ssh connection is failing to connect to 192.168.1.1,
make sure pc ethernet connection is in the same class as target,
Ip assignment		: Manual
ipv4 address		: 192.168.1.100
ipv4 subnet prefix	: 24
ipv4 gateway		: 192.168.1.1
----------------------------------------------------------------------------------
usb type-c conncetion ip settings for target to host connection,
Ip assignment		: Manual
ipv4 address		: 10.223.189.234
ipv4 subnet prefix	: 16
ipv4 gateway		: blank
disabled ipv6 but not sure, whether required or not. 
-----------------------------------------------------------------------------------
connection debugging techniques and useful commands,
$dmesg | tail 	--> disconnect and connect the cable and see the interface name
$route -n
$ping6 fe80::%eth0
$ip -6 neigh
$ip a show br-wan
$ssh root@fe80::230:1aff:fe4f:3df9%eth0
-----------------------------------------------------------------------------------
Firewall setting changing,
\\wsl$\Ubuntu\home\sandeepraj\lede\package\sandeeplabs\files\etc\init.d\sysutils
$iptables --insert zone_wan_input -j ACCEPT -p tcp --dport 5201
$iptables --insert zone_wan_input -j ACCEPT -p udp --dport 5201
$iptables --delete zone_wan_input -j ACCEPT -p tcp --dport 5201
$iptables --delete zone_wan_input -j ACCEPT -p udp --dport 5201
$lsb_release -a
-------------------------------------------------------------------------------------------
/etc/config/
​led_blink
​$cat led_blink
$cat /etc/init.d/startup_blink

$/etc/init.d/startup_blink enable 
​$/etc/init.d/startup_blink start
--------------------------------------------------------------

------------------------------------------------------------------------------
network booting using tftp server-client,
1) Make sure your firewall is off in your computer. Setup tftpserver with solarwinds or anyother supported software,
https://www.solarwinds.com/free-tools/free-tftp-server/registration?a_bid=5306571d&CMP=BIZ-PAP-CMPRTCH-FreeTool-TFTP-DL&a_aid=BIZ-PAP-CMPRTCH

$ifconfig -> to see the ip of computer with ethernet.
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 169.254.233.48  netmask 255.255.0.0  broadcast 169.254.255.255
        inet6 fe80::a059:9134:22f5:e930  prefixlen 64  scopeid 0xfd<compat,link,site,host>
        ether 38:f3:ab:e0:5a:09  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
		
Configure computer's ethernet ip as tftp server ip in menu,
File->Config->Server Bindings->Use custom server binding(refer to currently available bindings there)
Press 'OK' or 'General->Start' options to start the tftp server. 

2) enter into u-boot prompt by pressing escape just after reboot.
3) run "printenv" to see the environment settings
ath> printenv
bootargs=
bootcmd=bootm 0x9f0c0000
bootdelay=1
baudrate=115200
ethaddr=0x00:0xaa:0xbb:0xcc:0xdd:0xee
production=no
serverip=169.254.233.48
ipaddr=169.254.233.49
stdin=serial
stdout=serial
stderr=serial
ethact=eth0

Environment size: 214/262140 bytes
ath>
4) change the IP address settings so that you can contact the host PC 
ath>set serverip 169.254.233.48
ath>saveenv
ath>set ipaddr 169.254.233.49
ath>saveenv
ath> printenv
bootargs=
bootcmd=bootm 0x9f0c0000
bootdelay=1
baudrate=115200
ethaddr=0x00:0xaa:0xbb:0xcc:0xdd:0xee
production=no
serverip=169.254.233.48
ipaddr=169.254.233.49
stdin=serial
stdout=serial
stderr=serial
ethact=eth0

Environment size: 214/262140 bytes
ath>

5) verify with "ping <IP ADDRESS OF PC>"
ath> ping 169.254.233.48
eth0 link down
enet1 port1 up
dup 1 speed 1000
Using eth1 device
host 169.254.233.48 is alive
ath>

6) boot from tftp server,
ath> tftpboot 0x80060000 dl.bin
eth0 link down
Using eth1 device
TFTP from server 169.254.233.48; our IP address is 169.254.233.49
Filename 'dl.bin'.
Load address: 0x80060000
Loading: T T T #################################################################
					.
					.
					.
         #################################################################
         #################################################################
         ###############
done
Bytes transferred = 12386308 (bd0004 hex)
ath>

7) erase flash partition,
ath> sf erase 0xC0000 +${filesize}
SF: 12451840 bytes @ 0xc0000 Erased: OK
ath>
8) write image to partition,
ath> sf write 0x80060000 0xC0000 ${filesize}
SF: 12386308 bytes @ 0xc0000 Written: OK
ath>
9) do reset,
ath>reset

-------------------------------------------------------------------------------- 
$cd /home/sandeepraj/lede/build_dir/target-mips_24kc_musl/linux-ar71xx_generic/linux-4.14.221
$find . -iname "System.map"
$cd ./build_dir/target-mips_24kc_musl/linux-ar71xx_generic/linux-4.14.221/
$ls -l
$grep kmem_cache_alloc System.map
//$objdump -D -S -mmips32r1 --show-raw-insn --prefix-addresses --line-numbers vmlinux > vmlinux.objdump
$gdb vmlinux.o


-----------------------------------------------------------------------------------
ssh, scp from ubuntu sometimes stop due to man in middle attack warning. You can use the following to ignore that.
# ssh to ignore  WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!
$ssh -q -o "StrictHostKeyChecking no" 192.168.1.1 
 Or to permanently remove all warnings for this one server, edit your ~/.ssh/config file and add the following lines:
 
Host 192.168.1.1 // or "Host *" for all the host
StrictHostKeyChecking no   
Save the file and change mod 
 
$ chmod 400 ~/.ssh/config
 
You're good to go without the warning.

Another way is,
$ssh-keygen -f "/home/sandeepraj/.ssh/known_hosts" -R "192.168.1.1"

When executing ssh command recursively this helps,
ssh root@10.223.0x26.0xcd -y "ifconfig"
---------------------------------------------------------------------------
$iperf -c $ipaddr -t 14400 -i 1 -d
$echo 1 > /sys/kernel/debug/ieee80211/phy0/ath9k/reset
------------------------------------------------------------------
/home/sandeepraj/lede1/package/sandeeplabs/files/etc/init.d/sysutils
-------------------------------------------------------------------
\\wsl$\Ubuntu\home\sandeepraj\lede\build_dir\target-mips_24kc_musl\linux-ar71xx_generic\linux-4.14.221\Documentation\networking\batman-adv.rst
--------------------------------------------------------------------------
lede/package/sandeeplabs/files/usr/sbin/ath9k_watchdog
lede/package/sandeeplabs/files/usr/share/.sandeeplabs/config/ath9k_watchdog
------------------------------------------------------------------------------
./build_dir/target-mips_24kc_musl/linux-ar71xx_generic/backports-4.19.161-1/drivers/net/wireless/ath/ath9k
--------------------------------------------------------------------------------
git commands,
$git config --list
$git config --global user.name "Sandeep Raj B"
$git config --global user.email "sandeep.betanapalli@sandeeplabs.com"
$git clone git@bitbucket.org:sandeeplabs/lede.git
$cd lede/
$git branch -a
$git pull
$git status
$git config --list
$git branch -a
$git tag
$git checkout firmware-2021-04.4
$git status
$git checkout -f firmware-2021-04.4
$git status
$git branch
$./config.sh -h
$git log
$git log -- <file_name>		--> to see the commits done for that file.
$ls
$git branch
$./config.sh
$make -j16
$make -j8
$git branch
$git describe		--> to see openwrt version
$git checkout ad9e46f7156c165714a475b626dd26ff1166035e

$git tag -a <tag_name> -m "message" // Tag the latest HEAD
$git tag -a <tag_name> <commit_sha> -m "message" // Tag to the commit
$git push –-tags // Push the tags to remote
$git tag -d <tag_name>  //Delete the tag
 
Cherry pick a commit to main-branch 
$git checkout sandeeplabs/openwrt-v19.07.7  //MOve to main-branch
$git cherry-pick hash_commit
$git status
$git push

$git diff <previous commit id>		--> (use previous commit id to see changes after the given commit id)
$git log
$git branch
$git branch -a
$git pull
$git status
$git log
$git add <files>
$git config --list
$git commit -s -m "commit message"
$git push
$git commit --amend -m "New commit message"			--> usefull in changing the most recent commit message

------------------------------------------------------------------------------------
CONFIG_KERNEL_KALLSYMS=y
CONFIG_KERNEL_DEBUG_INFO=y
CONFIG_COLLECT_KERNEL_DEBUG=y
at the end of file lede/config.in.common

Better to do it with,
$make menuconfig
----------------------------------------------------------------------
Files of interest for channel configuration/setup/new model:

./build_dir/target-mips_24kc_musl/linux-ar71xx_generic/backports-4.19.161-1/drivers/net/wireless/ath/ath9k/common-init.c
./build_dir/target-mips_24kc_musl/wireless-regdb-2020.11.20/db.txt
package/network/utils/iw/patches/9500-iw-fes-apply-ath9k-fes_freq_-shift-bw_step.patch
------------------------------------------------------------------------------------------------
$cat /proc/mtd
$cat /proc/cmdline
$umount /overlay; firstboot -y && reboot
-------------------------------------------------
luci work around,
/usr/lib/lua/luci/view/mini/overview.htm
/usr/lib/lua/luci/view/admin_network/wifi_overview.htm:Smart Radio model: <%=parent_fes_model%>
/usr/lib/lua/luci/view/mini/wifi_overview.htm:Smart Radio model: <%=parent_fes_model%>
/home/sandeepraj/lede/build_dir/target-mips_24kc_musl/luci-mod-admin-mini/luasrc/view/mini/overview.htm/home/sandeepraj/lede/build_dir/target-mips_24kc_musl/luci-mod-admin-full/luasrc/view/admin_network/wifi_overview.htm
/home/sandeepraj/lede/build_dir/target-mips_24kc_musl/luci-mod-admin-mini/luasrc/view/mini/wifi_overview.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-full\luasrc\view\admin_status\index.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-mini\luasrc\view\mini_status\index.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-mini\luasrc\view\mini\overview.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-full\luasrc\view\admin_status\index.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-mini\luasrc\view\mini\overview.htm
\\wsl$\Ubuntu\home\sandeepraj\luci\modules\luci-mod-admin-mini\luasrc\view\mini_status\index.htm


---------------------------------------------------------------------
Voltage range,
Pancake 		-> 9v
Helix 			-> 5v
Remaining all 	-> 6v-42v

----------------------------------------------------------------------
Install dummy monitor,
$sudo apt-get install xserver-xorg-video-dummy

Copy below into 2 files, /usr/share/X11/xorg.conf.d/xorg.conf,/etc/X11/xorg.conf,

Section "Device"
    Identifier  "Configured Video Device"
    Driver      "dummy"
EndSection

Section "Monitor"
    Identifier  "Configured Monitor"
    HorizSync 31.5-48.5
    VertRefresh 50-70
EndSection

Section "Screen"
    Identifier  "Default Screen"
    Monitor     "Configured Monitor"
    Device      "Configured Video Device"
    DefaultDepth 24
    SubSection "Display"
    Depth 24
    Modes "1024x800"
    EndSubSection
EndSection

To apply display settings, restart the pc.
$restart 

Remove dummy monitor,
$sudo apt-get remove xserver-xorg-video-dummy
$sudo apt-get remove --auto-remove xserver-xorg-video-dummy
--------------------------------------------------------------------
Minipc 

User name	: sandeep
password	: sandeep
Hostname	: sandeep-LTS-testbed1
wlp1s0		: 10.0.51.132

User name	: sandeep
password	: sandeep123
Hostname	: sandeep-LTS-testbed2
wlp1s0		: 10.0.51.156

Anydesk
ID		: 763055992	-> 10.0.51.132 -> sandeep-LTS-testbed1 -> monitor connected
Password: sandeep123
ID		: 578040640	-> 10.0.51.156 -> sandeep-LTS-testbed2 -> dummy monitor can be installed
Password: sandeep123
------------------------------------------------------------------------------------------
cscope setup,
$find . -name "*.c" -o -name "*.h" > cscope.files
$cscope -q -R -b -i cscope.files 
$cscope -d

ctags setup,
$ctags -R .
$vim

keyboard shortcuts are common to ctags and cscope,
$vim or $cscope -d --> start
:ts main
ctrl+} --> to go inside the function or variables
ctrl+t --> to come back from the function or variables
:ts --> to see list of functions or variables
:q or ctrl+z --> to quit
-----------------------------------------------------------------------------------
sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt-get update
sudo apt-get install -y boot-repair && boot-repair

---------------------------------------------------------------------------------
$sysutils savelog
$scp /tmp/savelogs.tar.gz
$sudo ifconfig enp3s0 192.168.153.11 netmask 255.255.255.0 up

---------------------------------------------------------------
compilation process,
3.1	Build the firmwares
1.	Install packages needed for OpenWrt in Ubuntu
$ sudo apt update; sudo apt install -y build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget python3-distutils python3-setuptools rsync subversion swig time xsltproc zlib1g-dev
2.	Download sandeepLabs OpenWRT repo
$ git clone git@bitbucket.org:sandeeplabs/lede.git (For main sandeepLabs OpenWRT code)
$ git clone git@bitbucket.org:sandeeplabs/luci.git (For Luci code)
3.	Configure the build 
$ cd lede
$ ./config.sh (for normal build) OR
$ ./config.sh -h (list all build options)
4.	Build the firmwares 
$ make -j$(nproc) // Fast compiling (First build takes about several hours. Subsequent build takes 10-30mins)
$ make -j16 V=s // For 8 core processor 16 threads are possible, so maximum 16 can be given. 
$ make // Slow compiling
5.	Final firmwares are in bin/targets/ar71xx/generic/
sandeep-labs-firmware-*-smartradio_tx99_rwart-squashfs-sysupgrade.bin: TX99 firmware – for HW team development (created by ./config.sh -t option)
sandeep-labs-firmware-*-smartradio_rwart-squashfs-sysupgrade.bin: ART partition writable firmware – for development
sandeep-labs-firmware-*-smartradio -squashfs-sysupgrade.bin: Normal firmware – for customer
--------------------------------------------------------------------------------------------------
change mode ap->mesh->client etc you can copy from GUI in Simpleconfig menu here:
/luci/applications/luci-app-simpleconfig/luasrc/controller/simpleconfig.lua
ret = luci.sys.call("/usr/share/simpleconfig/setup.sh " .. script_parms)
In practical you should call this command from ssh
$/usr/share/simpleconfig/setup.sh mesh

For the wireless GUI menu, you can look at 
luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_network/wifi.lua

-----------------------------------------------------------------
for Mesh mode
 
$iw dev wlan0 mesh chswitch <CHANNEL> <#BEACONS>

(https://trello.com/c/tZbnSlcg)

for AP/Client use
 

hostapd_cli chan_switch <# beacons> <FREQ> ht
------------------------------------------------------------------
ssh -q -o StrictHostKeyChecking=no root@192.168.1.1 "iw wlan0 info"
------------------------------------------------------------------
dBm = 10lg(Power value/1 mW)
-------------------------------------------------------------
$ln -s <target file name> <soft link file name>
------------------------------------------------------------------
target ip and mac address of br-wan,
10.223.255.55	-> C4:93:00:0E:FF:38
10.223.255.193	-> C4:93:00:0E:FF:C2
10.223.45.151	-> C4:93:00:26:97:56	-> pancake
10.223.61.248	-> 00:30:1A:4F:3D:F9	-> pancake
---------------------------------------------------------------------
please make a copy of the XC8 compiler from the lab's PIC 
programming PC at the window (behind Dennis' table) 
so that later you can copy into your own MPLabx installation 

C:\Program Files (x86)\Microchip\xc8\v1.37
It is only 966MB
You can install any MPLab X version above 5.20

--------------------------------------------------------------------
ssl error for test automation login solution,
https://stackoverflow.com/questions/45755084/curl-how-to-get-a-cookie-from-after-login-to-send-in-a-curl-command

$curl -v -k --cookie-jar cookies.txt --form luci_password= --form luci_username=root https://192.168.1.1/cgi-bin/luci 
$curl -v -k -b cookies.txt https://192.168.1.1/cgi-bin/luci
--------------------------------------------------------------------
$sudo mount -o remount,rw /dev/nvme0n1p5 /media/sandeepraj/New\ Volume
----------------------------------------------
email signature html code,

<div><br><p class="MsoNormal">Thank you. </p>
<p class="MsoNormal">&nbsp;</p>
<p class="MsoNormal"><span lang="EN-US">Best Regards,</span></p>
<p class="MsoNormal"><span lang="EN-US">Sandeep Raj</span></p>
<p class="MsoNormal"><a href="http://www.sandeeplabs.com/" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&q=http://www.sandeeplabs.com/&source=gmail&ust=1635618284625000&usg=AFQjCNHjPOSWDqqzqTvUvXqsrAdu2vxfbg"><span style="color:rgb(5,99,193)">www.sandeeplabs.com</span></a></p>
<p class="MsoNormal"><img src="https://mlluxhsiejye.i.optimole.com/ClUzVhY.S-3Q~49719/w:auto/h:auto/q:75/https://sandeeplabs.com/wp-content/uploads/sandeep-Labs-logo_new-colors-1.svg" alt="image.png" width="200" height="64"></p>
<p class="MsoNormal" style="background-image:initial;background-position:initial;background-size:initial;background-repeat:initial;background-origin:initial;background-clip:initial"><span style="font-size:10pt;font-family:Roboto;color:rgb(13,94,151)">Resilient
Private Wireless Networks</span></p>
</div></div>

-------------------------------------------------------------------
ubuntu hibernate command,
$sudo systemctl hibernate

reference: https://askubuntu.com/questions/1240123/how-to-enable-the-hibernate-option-in-ubuntu-20-04
-------------------------------------------------------------------
Print time on terminal,

run below command in terminal or execute this script to sustain the time. 
$export PS1='[\D{%H:%M:%S-%d-%m-%Y}]\u@\h:\w$'

add below line in .bashrc to sustain time even after reboot.
PS1='[\D{%H:%M:%S-%d-%m-%Y}]\u@\h:\w$'
------------------------------------------------------------------------
6 node test bed ip addresses,
10.223.0x26.0xd0 --> central node
10.223.0x26.0xd2 --> host connected
10.223.0x26.0xcd
10.223.0x26.0xd6
10.223.0x26.0xd9
10.223.0x26.0xd3
-------------------------------------------------------------------
bootchart preparation in openwrt,
1. clone the openwrt source code and configure before compilation,
	$git clone git@bitbucket.org:sandeeplabs/lede.git
	$cd lede
	$./config.sh
2. enable bootchart flags in openwrt configuration,
	$pwd
	/home/sandeepraj/lede/
	$make menuconfig
	BUSYBOX_CONFIG_BOOTCHARTD
	BUSYBOX_CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER
	BUSYBOX_CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE
	Location: -> Base system -> busybox -> Init Utilities -> bootchartd (10 kb) 
	https://github.com/openwrt/openwrt/blob/master/package/utils/busybox/config/init/Config.in
	
3. compile after the source code and load the image into target, 
	$make -j16
	$scp sandeep-labs-firmware-2021-08.2-84-g930214de89-ar71xx-generic-smartradio_rwart-squashfs-sysupgrade.bin root@192.168.1.1:/tmp/
	$ssh root@192.168.1.1
	$cd /tmp/
	$sysupgrade -n sandeep-labs-firmware-2021-08.2-84-g930214de89-ar71xx-generic-smartradio_rwart-squashfs-sysupgrade.bin
4. enable the bootchart in the target,
	$bootchartd init
	or
	$bootchartd start
	$bootchartd stop
	$cd /tmp/log/
	$ls
	bootlog.tgz	--> 	it consists the bootlog information of all processes. 
				You may need to initialise and stop the bootchartd as per requirement.
				https://openwrt.org/docs/techref/process.boot
				https://elinux.org/Bootchart
	
5. After collecting the bootlog.tgz file with all the processes details, need to analys the boot time of each process. 
   There is a python gui tool which converts this logs to a visible image to understand easily. 
   The tool is at https://github.com/xrmx/bootchart 
	a. Install ubuntu 16.04 LTS in virtual box and update it, copy bootlog.tgz file to home.
	b. $git clone https://github.com/xrmx/bootchart
	c. $cd bootchart
	d. $make
	e. $./pyboochartgui.py ../bootlog.tgz	--> make sure you have python2, python2.7.
	This will generate the bootchart.png file. 
	
Note: 
pybootchartgui-r124.tar.gz is the official code But it is not working in ubuntu 18, ubuntu 20 versions. 
pybootchartgui-r124.tar.gz with python3.8, python 3.7, python 2.7, python2 also it is not working in 
ubuntu 16, ubuntu 18, ubuntu 20. 
And default package of pybootchartgui is also available in ubuntu 16, ubuntu 18, it is also not working.
Only thing working is the source code from https://github.com/xrmx/bootchart, make it, 
run in ubuntu 16.04 LTS with python 2, python2.7, if needed you can install 
pybootchartgui package for required packages to be installed with that, but run the 
$./pyboochartgui.py ../bootlog.tgz after doing $make in bootchart source code. 

If you want port the pybootchartgui-r124.tar.gz to python3.8, you get the source code from,
https://code.google.com/archive/p/pybootchartgui/downloads
------------------------------------------------------------------------------
kgdb setup in kernel,
https://www.open-mesh.org/doc/open-mesh/Kernel_debugging_with_kgdb.html

lede/build_dir/target-mips_24kc_musl/linux-ar71xx_generic/linux-4.14.221/.config
lede/target/linux/ar71xx/config-4.14
$make kernel_menuconfig 

-CONFIG_ATH79_WDT=y
+# CONFIG_ATH79_WDT is not set
# CONFIG_STRICT_KERNEL_RWX is not set
CONFIG_FRAME_POINTER=y
CONFIG_KGDB=y
CONFIG_KGDB_SERIAL_CONSOLE=y
CONFIG_DEBUG_INFO=y
CONFIG_DEBUG_INFO_DWARF4=y
# CONFIG_DEBUG_INFO_REDUCED is not set



CONFIG_GDB_SCRIPTS=y
